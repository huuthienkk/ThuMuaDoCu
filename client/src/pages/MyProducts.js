import React, { useEffect, useState } from 'react';
import api from '../services/api';
import Swal from 'sweetalert2';
import { useNavigate } from 'react-router-dom';
import { Box, Typography, Grid, Card, CardMedia, CardContent, CardActions, Button } from '@mui/material';

const MyProducts = () => {
  const [products, setProducts] = useState([]);
  const navigate = useNavigate();

  // üß≠ L·∫•y l·∫°i token v√† user m·ªói khi component mount
  const user = JSON.parse(localStorage.getItem('user'));
  const token = localStorage.getItem('token');

  // üîÅ H√†m load danh s√°ch s·∫£n ph·∫©m theo ng∆∞·ªùi d√πng hi·ªán t·∫°i
  const loadMyProducts = async () => {
    if (!token) {
      Swal.fire('Th√¥ng b√°o', 'Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ xem s·∫£n ph·∫©m c·ªßa b·∫°n!', 'warning');
      navigate('/login');
      return;
    }

    try {
      const res = await api.get('/products/mine', {
        headers: { Authorization: `Bearer ${token}` },
      });
      setProducts(res.data);
    } catch (err) {
      Swal.fire('L·ªói', 'Kh√¥ng th·ªÉ t·∫£i s·∫£n ph·∫©m c·ªßa b·∫°n!', 'error');
      console.error(err);
    }
  };

  // üöÄ G·ªçi API m·ªói khi user ho·∫∑c token thay ƒë·ªïi
  useEffect(() => {
    loadMyProducts();
  }, [token, user?._id]); // dependency quan tr·ªçng

  // ‚ùå X√≥a s·∫£n ph·∫©m
  const handleDelete = async (id) => {
    Swal.fire({
      title: 'X√°c nh·∫≠n x√≥a?',
      text: 'B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m n√†y?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'X√≥a',
      cancelButtonText: 'H·ªßy',
    }).then(async (result) => {
      if (result.isConfirmed) {
        try {
          await api.delete(`/products/${id}`, {
            headers: { Authorization: `Bearer ${token}` },
          });
          Swal.fire('ƒê√£ x√≥a!', 'S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a th√†nh c√¥ng.', 'success');
          loadMyProducts(); // reload sau khi x√≥a
        } catch (error) {
          Swal.fire('L·ªói!', 'Kh√¥ng th·ªÉ x√≥a s·∫£n ph·∫©m.', 'error');
        }
      }
    });
  };

  return (
    <Box sx={{ p: 4 }}>
      <Typography variant="h4" align="center" fontWeight="bold" color="primary" gutterBottom>
        üßæ S·∫£n ph·∫©m c·ªßa t√¥i
      </Typography>

      {products.length === 0 ? (
        <Typography align="center" mt={4} color="text.secondary">
          B·∫°n ch∆∞a ƒëƒÉng s·∫£n ph·∫©m n√†o.  
          <Button onClick={() => navigate('/add')} sx={{ ml: 1 }}>ƒêƒÉng ngay!</Button>
        </Typography>
      ) : (
        <Grid container spacing={3}>
          {products.map((p) => (
            <Grid item xs={12} sm={6} md={4} lg={3} key={p._id}>
              <Card sx={{ borderRadius: 3, boxShadow: 3 }}>
                <CardMedia
                  component="img"
                  height="160"
                  image={`http://localhost:5000/uploads/${p.image}`}
                  alt={p.title}
                />
                <CardContent>
                  <Typography variant="h6" noWrap>
                    {p.title}
                  </Typography>
                  <Typography color="primary" fontWeight="bold">
                    {p.price.toLocaleString()} ‚Ç´
                  </Typography>
                </CardContent>
                <CardActions sx={{ justifyContent: 'space-around' }}>
                  <Button variant="outlined" size="small" onClick={() => navigate(`/product/${p._id}`)}>
                    Xem
                  </Button>
                  <Button variant="contained" color="error" size="small" onClick={() => handleDelete(p._id)}>
                    X√≥a
                  </Button>
                </CardActions>
              </Card>
            </Grid>
          ))}
        </Grid>
      )}
    </Box>
  );
};

export default MyProducts;
